services:
  _defaults:
      autowire: true
      public: true

  # acme
  Cocotte\Acme\CertificateChecker: ~

  # console
  Symfony\Component\Console\Input\InputInterface:
    class: Symfony\Component\Console\Input\ArgvInput
  Symfony\Component\Console\Output\OutputInterface:
    class: Symfony\Component\Console\Output\ConsoleOutput
  Cocotte\Console\Style:
    class: Cocotte\Console\CocotteStyle
  Symfony\Component\Console\Application:
    class: Symfony\Component\Console\Application
    arguments:
      - "<fg=green;options=bold>Cocotte Console</>"
      - '%env(COCOTTE_VERSION)%'
  Cocotte\Command\:
    resource: '../src/Command/*'
    tags: ['console.command']
  Cocotte\Console\InteractionOperator: ~
  Cocotte\Console\OptionProviderRegistry: ~
  Cocotte\Console\OptionProviderAutomation:
    tags: ['event.subscriber']
  Cocotte\Console\HelperFactory: ~
  Symfony\Component\Console\Helper\ProcessHelper:
    factory: 'Cocotte\Console\HelperFactory:processHelper'

  # digital ocean
  Cocotte\DigitalOcean\ApiToken:
    tags: ['lazy.environment']
  Cocotte\DigitalOcean\ApiTokenOptionProvider:
    tags: ['option.provider']
  Cocotte\DigitalOcean\DigitalOceanFactory: ~
  Iodev\Whois\Whois:
    factory: 'Iodev\Whois\Whois::create'
  Cocotte\DigitalOcean\DnsValidator: ~
  Cocotte\DigitalOcean\Domain: ~
  Cocotte\DigitalOcean\DomainRecord: ~
  Cocotte\DigitalOcean\NetworkingConfigurator: ~
  Cocotte\DigitalOcean\SkipDnsValidation:
    tags: ['event.subscriber']
  DigitalOceanV2\Adapter\AdapterInterface:
    factory: 'Cocotte\DigitalOcean\DigitalOceanFactory:adapter'
    arguments: ['DigitalOceanV2\Adapter\GuzzleHttpAdapter']
    lazy: true
  DigitalOceanV2\DigitalOceanV2: ~
  DigitalOceanV2\Api\Droplet: ~
  DigitalOceanV2\Api\Image: ~
  DigitalOceanV2\Api\Region: ~
  DigitalOceanV2\Api\Size: ~
  DigitalOceanV2\Api\Key: ~
  DigitalOceanV2\Api\Domain: ~
  DigitalOceanV2\Api\DomainRecord: ~

  # environment
  Cocotte\Environment\LazyEnvironmentLoader:
    tags: ['event.subscriber']
  Cocotte\Environment\EnvironmentState: ~

  # event
  Symfony\Component\EventDispatcher\EventDispatcherInterface:
    class: Symfony\Component\EventDispatcher\EventDispatcher

  # filesystem
  Cocotte\Filesystem\Filesystem:
    class: Cocotte\Filesystem\CocotteFilesystem

  # finder
  Cocotte\Finder\Finder:
    class: Cocotte\Finder\CocotteFinder

  # help
  Cocotte\Help\FromEnvExamples: ~

  # host
  Cocotte\Host\HostMount:
    tags: ['lazy.environment']
    factory: ['@Cocotte\Host\HostMountFactory', fromDocker]
  Cocotte\Host\Mounts:
    tags: ['lazy.environment']
    factory: ['@Cocotte\Host\MountsFactory', fromDocker]
  Cocotte\Host\HostMountRequiredListener:
    tags: ['event.subscriber']
  Cocotte\Host\HostMountFactory: ~
  Cocotte\Host\MountsFactory: ~

  # machine
  Cocotte\Machine\MachineCreator: ~
  Cocotte\Machine\MachineIp:
    tags: ['lazy.environment']
    factory: [ '@Cocotte\Machine\MachineIp', fromMachine ]
    arguments: [ '@Cocotte\Shell\ProcessRunner' ]
  Cocotte\Machine\MachineName:
    tags: ['lazy.environment']
  Cocotte\Machine\MachineNameOptionProvider:
    tags: ['option.provider']
  Cocotte\Machine\MachineState: ~
  Cocotte\Machine\MachineStoragePath:
    tags: ['lazy.environment']
    factory: ['@Cocotte\Machine\MachineStoragePathFactory', fromEnv]
  Cocotte\Machine\MachineRequiredListener:
    tags: ['event.subscriber']
  Cocotte\Machine\MachineStoragePathFactory: ~

  # shell
  Cocotte\Shell\ProcessRunner: ~
  Cocotte\Shell\EnvironmentSubstitution\SubstitutionFactory: ~
  Cocotte\Shell\BasicAuth: ~
  Cocotte\Shell\Env:
    class: Cocotte\Shell\DefaultEnv

  # template

  ## static site
  Cocotte\Template\StaticSite\StaticSiteCreator: ~
  Cocotte\Template\StaticSite\StaticSiteHostname:
    tags: ['lazy.environment']
  Cocotte\Template\StaticSite\StaticSiteHostnameOptionProvider:
    tags: ['option.provider']
  Cocotte\Template\StaticSite\StaticSiteNamespace:
    tags: ['lazy.environment']
  Cocotte\Template\StaticSite\StaticSiteNamespaceOptionProvider:
    tags: ['option.provider']
  Cocotte\Template\StaticSite\StaticSiteDeploymentValidator: ~

  ## traefik
  Cocotte\Template\Traefik\TraefikCreator: ~
  Cocotte\Template\Traefik\TraefikHostname:
    tags: ['lazy.environment']
  Cocotte\Template\Traefik\TraefikHostnameOptionProvider:
    tags: ['option.provider']
  Cocotte\Template\Traefik\TraefikPassword:
    tags: ['lazy.environment']
  Cocotte\Template\Traefik\TraefikPasswordOptionProvider:
    tags: ['option.provider']
  Cocotte\Template\Traefik\TraefikUsername:
    tags: ['lazy.environment']
  Cocotte\Template\Traefik\TraefikUsernameOptionProvider:
    tags: ['option.provider']
  Cocotte\Template\Traefik\TraefikDeploymentValidator: ~

